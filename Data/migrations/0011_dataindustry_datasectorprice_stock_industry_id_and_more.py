# Generated by Django 5.2.5 on 2025-08-11 18:31

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Data', '0010_remove_pricebar'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataIndustry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('industryKey', models.CharField(db_index=True, help_text='Normalized industry key', max_length=100, unique=True)),
                ('industryName', models.CharField(help_text='Human-readable industry name', max_length=200)),
                ('isActive', models.BooleanField(default=True, help_text='Whether this industry is actively tracked')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_sync', models.DateTimeField(blank=True, help_text='Last time industry data was synced', null=True)),
                ('data_source', models.CharField(choices=[('yahoo', 'Yahoo Finance'), ('mock', 'Mock Data')], default='yahoo', help_text='Source of the industry data', max_length=20)),
            ],
            options={
                'verbose_name': 'Data Industry',
                'verbose_name_plural': 'Data Industries',
                'db_table': 'data_industry',
                'ordering': ['industryName'],
            },
        ),
        migrations.CreateModel(
            name='DataSectorPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, help_text='Trading date')),
                ('close_index', models.DecimalField(decimal_places=6, help_text='Sector composite close index', max_digits=20, validators=[django.core.validators.MinValueValidator(0)])),
                ('volume_agg', models.BigIntegerField(default=0, help_text='Aggregated volume for sector constituents')),
                ('constituents_count', models.IntegerField(help_text='Number of stocks included in composite')),
                ('method', models.CharField(choices=[('cap_weighted', 'Cap Weighted'), ('equal_weighted', 'Equal Weighted')], default='cap_weighted', help_text='Composite calculation method', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_source', models.CharField(choices=[('yahoo', 'Yahoo Finance'), ('mock', 'Mock Data')], default='yahoo', help_text='Source of the composite data', max_length=20)),
            ],
            options={
                'verbose_name': 'Data Sector Price',
                'verbose_name_plural': 'Data Sector Prices',
                'db_table': 'data_sectorprice',
                'ordering': ['-date'],
            },
        ),
        migrations.AddField(
            model_name='stock',
            name='industry_id',
            field=models.ForeignKey(blank=True, help_text='Related normalized industry', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stocks', to='Data.dataindustry'),
        ),
        migrations.CreateModel(
            name='DataIndustryPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, help_text='Trading date')),
                ('close_index', models.DecimalField(decimal_places=6, help_text='Industry composite close index', max_digits=20, validators=[django.core.validators.MinValueValidator(0)])),
                ('volume_agg', models.BigIntegerField(default=0, help_text='Aggregated volume for industry constituents')),
                ('constituents_count', models.IntegerField(help_text='Number of stocks included in composite')),
                ('method', models.CharField(choices=[('cap_weighted', 'Cap Weighted'), ('equal_weighted', 'Equal Weighted')], default='cap_weighted', help_text='Composite calculation method', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_source', models.CharField(choices=[('yahoo', 'Yahoo Finance'), ('mock', 'Mock Data')], default='yahoo', help_text='Source of the composite data', max_length=20)),
                ('industry', models.ForeignKey(help_text='Related industry', on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='Data.dataindustry')),
            ],
            options={
                'verbose_name': 'Data Industry Price',
                'verbose_name_plural': 'Data Industry Prices',
                'db_table': 'data_industryprice',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='DataSector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sectorKey', models.CharField(db_index=True, help_text="Normalized sector key (e.g., 'technology', 'healthcare')", max_length=50, unique=True)),
                ('sectorName', models.CharField(help_text='Human-readable sector name', max_length=200)),
                ('isActive', models.BooleanField(default=True, help_text='Whether this sector is actively tracked')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_sync', models.DateTimeField(blank=True, help_text='Last time sector data was synced', null=True)),
                ('data_source', models.CharField(choices=[('yahoo', 'Yahoo Finance'), ('mock', 'Mock Data')], default='yahoo', help_text='Source of the sector data', max_length=20)),
            ],
            options={
                'verbose_name': 'Data Sector',
                'verbose_name_plural': 'Data Sectors',
                'db_table': 'data_sector',
                'ordering': ['sectorName'],
                'indexes': [models.Index(fields=['sectorKey'], name='data_sector_sectorK_21ffe1_idx'), models.Index(fields=['isActive'], name='data_sector_isActiv_e39f30_idx')],
            },
        ),
        migrations.AddField(
            model_name='dataindustry',
            name='sector',
            field=models.ForeignKey(help_text='Parent sector', on_delete=django.db.models.deletion.CASCADE, related_name='industries', to='Data.datasector'),
        ),
        migrations.AddField(
            model_name='stock',
            name='sector_id',
            field=models.ForeignKey(blank=True, help_text='Related normalized sector', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stocks', to='Data.datasector'),
        ),
        migrations.AddIndex(
            model_name='stock',
            index=models.Index(fields=['sector_id'], name='Data_stock_sector__0cadae_idx'),
        ),
        migrations.AddIndex(
            model_name='stock',
            index=models.Index(fields=['industry_id'], name='Data_stock_industr_25e798_idx'),
        ),
        migrations.AddIndex(
            model_name='stock',
            index=models.Index(fields=['sector_id', 'industry_id'], name='Data_stock_sector__20bb36_idx'),
        ),
        migrations.AddField(
            model_name='datasectorprice',
            name='sector',
            field=models.ForeignKey(help_text='Related sector', on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='Data.datasector'),
        ),
        migrations.AddIndex(
            model_name='dataindustryprice',
            index=models.Index(fields=['date'], name='data_indust_date_494499_idx'),
        ),
        migrations.AddIndex(
            model_name='dataindustryprice',
            index=models.Index(fields=['industry', 'date'], name='data_indust_industr_42e4b9_idx'),
        ),
        migrations.AddIndex(
            model_name='dataindustryprice',
            index=models.Index(fields=['industry', '-date'], name='data_indust_industr_98c43f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dataindustryprice',
            unique_together={('industry', 'date')},
        ),
        migrations.AddIndex(
            model_name='dataindustry',
            index=models.Index(fields=['industryKey'], name='data_indust_industr_8e64c9_idx'),
        ),
        migrations.AddIndex(
            model_name='dataindustry',
            index=models.Index(fields=['sector'], name='data_indust_sector__f77910_idx'),
        ),
        migrations.AddIndex(
            model_name='dataindustry',
            index=models.Index(fields=['isActive'], name='data_indust_isActiv_59c29f_idx'),
        ),
        migrations.AddIndex(
            model_name='datasectorprice',
            index=models.Index(fields=['date'], name='data_sector_date_08f7fb_idx'),
        ),
        migrations.AddIndex(
            model_name='datasectorprice',
            index=models.Index(fields=['sector', 'date'], name='data_sector_sector__61f6b7_idx'),
        ),
        migrations.AddIndex(
            model_name='datasectorprice',
            index=models.Index(fields=['sector', '-date'], name='data_sector_sector__99b5c3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='datasectorprice',
            unique_together={('sector', 'date')},
        ),
    ]
