# Generated by Django 5.2.5 on 2025-08-06 21:25

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Portfolio",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(help_text="Portfolio name", max_length=100)),
                ("description", models.TextField(blank=True, help_text="Portfolio description")),
                ("is_active", models.BooleanField(default=True, help_text="Whether this portfolio is active")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Portfolio owner",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="portfolios",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Portfolio",
                "verbose_name_plural": "Portfolios",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Stock",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "symbol",
                    models.CharField(
                        db_index=True, help_text="Stock ticker symbol (e.g., AAPL, MSFT)", max_length=10, unique=True
                    ),
                ),
                ("short_name", models.CharField(blank=True, help_text="Short company name", max_length=100)),
                ("long_name", models.CharField(blank=True, help_text="Full company name", max_length=255)),
                ("currency", models.CharField(default="USD", help_text="Trading currency", max_length=10)),
                (
                    "exchange",
                    models.CharField(blank=True, help_text="Stock exchange (e.g., NASDAQ, NYSE)", max_length=50),
                ),
                ("sector", models.CharField(blank=True, help_text="Business sector", max_length=100)),
                ("industry", models.CharField(blank=True, help_text="Industry classification", max_length=100)),
                ("country", models.CharField(blank=True, help_text="Country of headquarters", max_length=50)),
                ("website", models.URLField(blank=True, help_text="Company website")),
                ("description", models.TextField(blank=True, help_text="Company description/summary")),
                ("market_cap", models.BigIntegerField(default=0, help_text="Market capitalization")),
                ("shares_outstanding", models.BigIntegerField(default=0, help_text="Number of shares outstanding")),
                ("is_active", models.BooleanField(default=True, help_text="Whether this stock is actively tracked")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "last_sync",
                    models.DateTimeField(
                        blank=True, help_text="Last time data was synced from Yahoo Finance", null=True
                    ),
                ),
            ],
            options={
                "verbose_name": "Stock",
                "verbose_name_plural": "Stocks",
                "ordering": ["symbol"],
                "indexes": [
                    models.Index(fields=["symbol"], name="Data_stock_symbol_8198ba_idx"),
                    models.Index(fields=["sector", "industry"], name="Data_stock_sector_ae56e8_idx"),
                    models.Index(fields=["is_active", "symbol"], name="Data_stock_is_acti_964ae7_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="PortfolioHolding",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="Number of shares",
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "purchase_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Average purchase price per share",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("purchase_date", models.DateField(help_text="Date of purchase")),
                ("notes", models.TextField(blank=True, help_text="Additional notes about this holding")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "portfolio",
                    models.ForeignKey(
                        help_text="Related portfolio",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="holdings",
                        to="Data.portfolio",
                    ),
                ),
                (
                    "stock",
                    models.ForeignKey(
                        help_text="Stock being held",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="portfolio_holdings",
                        to="Data.stock",
                    ),
                ),
            ],
            options={
                "verbose_name": "Portfolio Holding",
                "verbose_name_plural": "Portfolio Holdings",
                "ordering": ["stock__symbol"],
                "unique_together": {("portfolio", "stock")},
            },
        ),
        migrations.CreateModel(
            name="StockPrice",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.DateField(db_index=True, help_text="Trading date")),
                (
                    "open",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Opening price",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "high",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Daily high price",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "low",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Daily low price",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "close",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Closing price",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "adjusted_close",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Adjusted closing price (for splits/dividends)",
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "volume",
                    models.BigIntegerField(
                        default=0, help_text="Trading volume", validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "change_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Price change from previous close",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "change_percent",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Percentage change from previous close",
                        max_digits=5,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "stock",
                    models.ForeignKey(
                        help_text="Related stock",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prices",
                        to="Data.stock",
                    ),
                ),
            ],
            options={
                "verbose_name": "Stock Price",
                "verbose_name_plural": "Stock Prices",
                "ordering": ["-date"],
                "indexes": [
                    models.Index(fields=["stock", "-date"], name="Data_stockp_stock_i_4e3882_idx"),
                    models.Index(fields=["-date"], name="Data_stockp_date_2b6b19_idx"),
                ],
                "unique_together": {("stock", "date")},
            },
        ),
    ]
